# ca65 configuration for 128K SMC file with 32K usable ROM space

MEMORY {
	ZP:         	start =	$00,  	size = $FF, 	define = yes;
	SOFTSTACK:		start =	$100, 	size = $FF, 	define = yes;
	RAM:        	start =	$200,  	size = $1700;

	STACK:			start = $1F00, size = $FF, type = rw, define = yes;
	
	PAD:			start = $0000,  size = $8000, fill = yes, type = ro, define = yes;
	ROM:        	start = $8000,  size = $7FB0, fill = yes, fillval = $E1;

	ROMRESHEADER:   start = $FFB0,  size =   $10, fill = yes;
	ROMHEADER:     	start = $FFC0,  size =   $20, fill = yes;
	VECTORS:    	start = $FFE0,  size =   $20, fill = yes;

	GFX1:			start = $410000, size = $10000, fill = yes, fillval = $00;
	GFX2:			start = $420000, size = $10000, fill = yes, fillval = $00;
	GFX3:			start = $430000, size = $10000, fill = yes, fillval = $00;
	GFX4:			start = $440000, size = $10000, fill = yes, fillval = $00;
	GFX5:			start = $450000, size = $10000, fill = yes, fillval = $00;
	GFX6:			start = $460000, size = $10000, fill = yes, fillval = $00;
	GFX7:			start = $470000, size = $10000, fill = yes, fillval = $00;
	GFX8:			start = $480000, size = $10000, fill = yes, fillval = $00;
	GFX9:			start = $490000, size = $10000, fill = yes, fillval = $00;
	GFXA:			start = $4A0000, size = $10000, fill = yes, fillval = $00;
	GFXB:			start = $4B0000, size = $10000, fill = yes, fillval = $00;
	GFXC:			start = $4C0000, size = $10000, fill = yes, fillval = $00;
	GFXD:			start = $4D0000, size = $10000, fill = yes, fillval = $00;
	GFXE:			start = $4E0000, size = $10000, fill = yes, fillval = $00;
	GFXF:			start = $4F0000, size = $10000, fill = yes, fillval = $00;
}

SEGMENTS {
	ZEROPAGE:   	load = ZP,      type = zp;
	STACK:      	load = STACK,   type = rw, align = $100, optional = yes;

	BSS:        	load = RAM,     type = bss, define = yes;

	PAD:			load = PAD,		type = ro;
	CODE:       	load = ROM,    	type = ro;
	DATA:        	load = ROM, 	run = RAM, type = rw, define = yes;	
	RODATA:			load = ROM, 	type = ro, define = yes;	

	ROMRESHEADER:	load = ROMRESHEADER,  type = ro;
	ROMHEADER:     	load = ROMHEADER,  type = ro;
	VECTORS:    	load = VECTORS, type = ro, align = $20;
	
	GFX1:			load = GFX1, type = ro;
	GFX2:			load = GFX2, type = ro;
	GFX3:			load = GFX3, type = ro;
	GFX4:			load = GFX4, type = ro;
	GFX5:			load = GFX5, type = ro;
	GFX6:			load = GFX6, type = ro;
	GFX7:			load = GFX7, type = ro;
	GFX8:			load = GFX8, type = ro;
	GFX9:			load = GFX9, type = ro;
	GFXA:			load = GFXA, type = ro;
	GFXB:			load = GFXB, type = ro;
	GFXC:			load = GFXC, type = ro;
	GFXD:			load = GFXD, type = ro;
	GFXE:			load = GFXE, type = ro;
	GFXF:			load = GFXF, type = ro;
}
